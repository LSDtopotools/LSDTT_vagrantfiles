= Vagrantfiles for LSDTopoTools

This repository has https://www.vagrantup.com/[vagrant] https://www.vagrantup.com/docs/vagrantfile/[files] that are used to set up a http://lsdtopotools.github.io/[LSDTopoTools] server within you personal computer. 

There are a number of ways to get LSDTopoTools working on your computer but this is perhaps the easiest (at least that we have discovered so far). 

The https://www.vagrantup.com/[Vagrant website] has plenty of documentation, but briefly, this is what you need to get started:

. Download and install https://www.virtualbox.org/[virtualbox].
. Download and install https://www.virtualbox.org/[vagrant]. You might have to restart your computer after this. 
. If you are on Windows, download http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html[putty.exe].
. Make a folder for your vagrant box and download one of our vagrantfiles: https://github.com/LSDtopotools/LSDTT_vagrantfiles
. Rename the vagrantfile from the repo (either `Vagrantfile_32bit_FFTW` or `Vagrantfile_64bit_FFTW`) simply `vagrantfile`. 
. One directory level down from the directory for your vagrantfile, make a directory `LSDTopoTools`. 
+
.Example directory structure
************************************************
pass:[C:]/vagrantboxes/ +
|--LSDTopoTools +
|--Ubuntu32 +
~~~|-- vagrantfile +
************************************************
+
. Open a terminal or powershell window and navigate to the directory with the vagrantfile. 
. Run `vagrant up` from the command line. 
+
WARNING: If you are running `vagrant up` for the first time it can take some time to download the https://www.vagrantup.com/docs/getting-started/boxes.html[base box]. They are several hundred Mb each!
+
. Run `vagrant provision` after the box has started. 
. You should now be able to use `putty.exe` to ssh into your LSDTopoTools server. The host name is almost always `127.0.0.1` and the port is almost always `2222`. 

== Which box should I choose?

We have 32 bit and 64 bit options available. Both are based on a supported version of http://www.ubuntu.com/[Ubuntu], mainly because Ubuntu regualrly updates its operating systems and https://insights.ubuntu.com/2015/01/14/announcing-snappy-ubuntu-core-on-vagrant-cloud/?_ga=1.90722392.33500002.1458124931[vagrant boxes]. 

Computers now are virtually all 64 bit. 64 bit machines are faster, and in addition https://en.wikipedia.org/wiki/3_GB_barrier[32 bit machines limit the amount of memory you can use]. So 64 bit is superior. 

However, many windows computers have some default settings that prevent users from running a 64 bit guest operating system, which is very annoying. You can turn these settings off, but this involves going into your https://en.wikipedia.org/wiki/BIOS[BIOS], and if you don't know what that is don't even think about changing its settings. 

So  *if you are using a Windows machine, select the 32bit option*. Otherwise, ue the 64 bit. 
+
.Gotchas
************************************************
It might be the case that you have seperate vagrantfile, 
perhaps one with the FFTW and one without. 
If you try to use `vagrant up` on the second virtual machine, 
then you will get an error because even if the first machine is closed, it will still have blocked the ssh port. 
If you've got no idea what that means, it suffices to say that if you run vagrant up in two folders the second folder's `vagrant up` command will not work. 
It is easy to get around this: run `vagrant reload` rather than `vagrant up`. 
See the https://github.com/mitchellh/vagrant/issues/3232[discussion here for details].
************************************************
+



