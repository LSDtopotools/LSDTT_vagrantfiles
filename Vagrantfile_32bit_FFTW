# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "ubuntu/precise32"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "../LSDTopoTools", "/LSDTopoTools"

  # Settings for VirtualBox
  # YOU MUST HAVE VIRTUAL BOX FOR THIS TO WORK
  config.vm.provider "virtualbox" do |vb|
    # Customize the amount of memory on the VM:
    # You should adjust this based on your computer's memory
    # 32 bit machines generally cannot exceed 3GB of memory
    vb.memory = "3000"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # This provisions the machine through a shell script
  config.vm.provision "shell", inline: <<-SHELL
    sudo apt-get update
    sudo apt-get install -y git
    sudo apt-get install -y gdal-bin
    
    # Check if parent directories exist
    if ! [ -d /LSDTopoTools/Git_projects ]
      then
        echo "Need to make the Git projects folder"
        mkdir /LSDTopoTools/Git_projects
      else 
        echo "I found a Git_projects folder."
    fi
    
    # Check if parent directories exist, part 2
    if ! [ -d /LSDTopoTools/Topographic_projects ]
      then
        echo "Need to make the Topographic projects folder"
        mkdir /LSDTopoTools/Topographic_projects
      else 
        echo "I found a Topographic_projects folder."
    fi    
      
    # check if the files have been cloned
    if [ -f /LSDTopoTools/Git_projects/LSDTopoTools_AnalysisDriver/LSDRaster.cpp ]
      then
        echo "LSDTopoTools_AnalysisDriver exists, updating."
        git --work-tree=/LSDTopoTools/Git_projects/LSDTopoTools_AnalysisDriver --git-dir=/LSDTopoTools/Git_projects/LSDTopoTools_AnalysisDriver/.git  pull origin master
      else
        echo "cloning the analysis packages"
        git clone https://github.com/LSDtopotools/LSDTopoTools_AnalysisDriver.git /LSDTopoTools/Git_projects/LSDTopoTools_AnalysisDriver
    fi

    if [ -f /LSDTopoTools/Git_projects/LSDTopoTools_CRNBasinwide/LSDRaster.cpp ]
      then
        echo "LSDTopoTools_CRNBasinwide exists, updating"
        git --work-tree=/LSDTopoTools/Git_projects/LSDTopoTools_CRNBasinwide --git-dir=/LSDTopoTools/Git_projects/LSDTopoTools_CRNBasinwide/.git pull origin master
      else
        echo "Cloning the cosmogenic packages"
        git clone https://github.com/LSDtopotools/LSDTopoTools_CRNBasinwide.git /LSDTopoTools/Git_projects/LSDTopoTools_CRNBasinwide 
    fi




    # This is all the stuff for FFTW
    # First check if FFTW has been downloaded already
    if [ -d /LSDTopoTools/fftw-3.3.4 ]
      then
        echo "I've already got FFTW!"
      
      else
        # you need to go into the LSDTopoTools folder
        cd /LSDTopoTools
      
        # You need fortrant 77 for FFTW. Get it
        sudo apt-get install -y fort77
        
        # Get FFTW 3.3.4 from the internets
        echo "I am getting the FFTW tarbal. This is being done silently."        
        wget -q http://www.fftw.org/fftw-3.3.4.tar.gz
        echo "Okay I should have that now. I am going to unpack it. I will also do this silently."
        tar -zxf fftw-3.3.4.tar.gz 
        
        
        #echo "I've now unzipped that for you. Lets move on to configure this bad boy!"
        #cd fftw-3.3.4 
        #./configure
        
        
        # now compile it
        echo "I am about to compile FFTW. WARNING!! This might take a while."
        cd /LSDTopoTools/fftw-3.3.4/
        ./configure
    
        echo "I am finished configuring. Now I will run the makefile. WARNING this will take ages."
        make 
        
        echo "Now I am installing FFTW."
        make install
        cd ~       
    fi
    

  SHELL
end
